{"meta":{"title":"HuiProgramer","subtitle":"优秀是一种习惯，坚持是一种品格！","description":null,"author":"HuiProgramer","url":"http://HuiProgramer.github.io"},"pages":[{"title":"关于","date":"2018-12-09T13:00:09.000Z","updated":"2019-01-09T13:33:50.902Z","comments":false,"path":"about/index.html","permalink":"http://HuiProgramer.github.io/about/index.html","excerpt":"","text":"基础信息 QQ：2101348712 E-Mail：huiprogramer@outlook.com Github：https://github.com/HuiProgramer 坐标：湘潭 职业：大学生 热衷方向 Java Python HTML5/CSS JavaScript C/C++ Golang 兴趣爱好 玩游戏 写代码 听歌 以及各种能让我分泌多巴胺的事情 博客简介 此博客产生主要原因为博客园写博客限制太大，而服务器和域名的费用对我这个穷学生来说比较昂贵，故此才将Blog部署在github上。 更新日志 [2019/1/9] 更新 修改404页面 新增底部❤跳动动画 [2019/1/8] 更新 修改时间轴为彩色 修改底部心型为粉色 [2019/1/5] 更新 写about页面 调整友情链接为推荐阅读 新增友情链接页面（解决手机端无法看见友情链接问题） 在Coding上备份此博客 [2018/12/29] 更新 新增sitemap.xml [2018/12/27] 更新 新增一些小部件 移除hexo底部显示 新增网站访问量和站内字数统计 [2018/12/25] 更新 移除学校官网选项（测试自己写的一个网页放在博客里） 播放器更换 [2018/12/23] 更新 新增友情链接面板（现已改为推荐阅读） 新增鼠标放在头像上旋转 新增加载文章显示进度条 [2018/12/22] 更新 新增网易云播放器插件 给每篇文章增加边框 [2018/12/21] 更新 移除小播放器部件 新增Daobvoice实现博客内部聊天 修改点击特效为爆炸效果 [2018/12/20] 更新 新增文章分享按钮 新增全文结束语句 新增小播放器部件 新增头像为圆形 [2018/12/19] 更新 新增热度显示 新增字数统计和阅读时长 修改评论系统为来必力 [2018/12/18] 更新 新增学校官网页面（大一的一个期末考核） 新增RSS订阅 新增阅读全文按钮 新增动态背景 修改看板娘 新增本地搜索 [2018/12/17] 更新 修改主题为next 添加右上角Github猫。 [2018/12/15] 更新 新增看板娘 新增网站统计和不蒜子访客统计 新增代码高亮 [2018/12/14] 更新 新增评论功能（valine） 新增分类设置 新增友链页面 [2018/12/14] 更新 新增爱心点击特效 添加打赏功能 [2018/12/13] 更新 修改主题为snippet. [2018/12/12] 更新 搭建博客"},{"title":"友链申请","date":"2019-01-05T06:42:16.000Z","updated":"2019-01-08T13:14:07.943Z","comments":true,"path":"apply/index.html","permalink":"http://HuiProgramer.github.io/apply/index.html","excerpt":"","text":"友链申请原则 贵站不涉及黄，赌，毒，暴力等一切违法违背道德内容。 贵站保持更新状态。 本站有权删除长时间打不开的站点。 友链提交之后，等待博主审核，将通过邮件的方式回复您。 本站友链信息 名称：HuiProgramer 网站：https://huiprogramer.github.io 介绍：技术分享与学习交流 申请友链格式 名称：xxx 网站：xxx.xxx 友情申请方式 直接下方留言即可 通过右下角的聊天工具联系我 联系邮箱：HuiProgramer@outlook.com"},{"title":"分类","date":"2018-12-09T12:58:13.000Z","updated":"2018-12-10T09:38:43.328Z","comments":false,"path":"categories/index.html","permalink":"http://HuiProgramer.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-12-09T12:59:59.000Z","updated":"2018-12-10T09:38:43.448Z","comments":false,"path":"tags/index.html","permalink":"http://HuiProgramer.github.io/tags/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2019-01-05T06:30:13.000Z","updated":"2019-01-05T09:51:08.161Z","comments":false,"path":"links/index.html","permalink":"http://HuiProgramer.github.io/links/index.html","excerpt":"","text":"以下链接排名不分先后，感谢您的到来，友链申请 请移步此页面 橙色的一亩三分地 Inick的小站 周宇峰的博客 爱生活爱技术 百万链 大鸭梨的博客"}],"posts":[{"title":"2018年传智播客Python全栈学习(15期)","slug":"2018年传智播客Python全栈学习-15期","date":"2019-01-09T13:58:40.000Z","updated":"2019-01-09T14:05:12.412Z","comments":true,"path":"2018年传智播客Python全栈学习-15期.html","link":"","permalink":"http://HuiProgramer.github.io/2018年传智播客Python全栈学习-15期.html","excerpt":"","text":"链接: https://pan.baidu.com/s/15UvzxxHaGJ-dWKz8A8CMlg提取码: mtdr PS:如果链接失效或者有任何问题，请在评论区留言。","categories":[{"name":"资源分享","slug":"资源分享","permalink":"http://HuiProgramer.github.io/categories/资源分享/"},{"name":"学习教程","slug":"资源分享/学习教程","permalink":"http://HuiProgramer.github.io/categories/资源分享/学习教程/"},{"name":"Python","slug":"资源分享/学习教程/Python","permalink":"http://HuiProgramer.github.io/categories/资源分享/学习教程/Python/"}],"tags":[{"name":"学习资料","slug":"学习资料","permalink":"http://HuiProgramer.github.io/tags/学习资料/"},{"name":"学习视频","slug":"学习视频","permalink":"http://HuiProgramer.github.io/tags/学习视频/"}],"keywords":[{"name":"资源分享","slug":"资源分享","permalink":"http://HuiProgramer.github.io/categories/资源分享/"},{"name":"学习教程","slug":"资源分享/学习教程","permalink":"http://HuiProgramer.github.io/categories/资源分享/学习教程/"},{"name":"Python","slug":"资源分享/学习教程/Python","permalink":"http://HuiProgramer.github.io/categories/资源分享/学习教程/Python/"}]},{"title":"2018慕课网全站付费资源（119个课程）","slug":"2018慕课网全站付费资源（119个课程）","date":"2019-01-09T13:41:02.000Z","updated":"2019-01-09T13:50:46.591Z","comments":true,"path":"2018慕课网全站付费资源（119个课程）.html","link":"","permalink":"http://HuiProgramer.github.io/2018慕课网全站付费资源（119个课程）.html","excerpt":"","text":"2018慕课网全站付费资源，119个课程，912.45GB 集合了2018年最新慕课网全站付费购买视频，一共加起来有912.45GB的百度云资源视频免费分享 包括了所有的技术学习类的教程，所有教程名字都可以对应到慕课网上的视频教程名字 慕课网(IMOOC)是IT技能学习平台。慕课网(IMOOC)提供了丰富的移动端开发、php开发、web前端、android开发以及html5等视频教程资源公开课。并且富有交互性及趣味性，你还可以和朋友一起编程。 所有的教程都支持百度云在线观看，无需下载，当然如果你想看原画质，可以自己下载下来观看 链接：https://pan.baidu.com/s/1SmkhdtOVDWy0GHF5UC3cIg提取码：59ig PS:如果链接失效或者有任何问题，请在评论区留言。","categories":[{"name":"资源分享","slug":"资源分享","permalink":"http://HuiProgramer.github.io/categories/资源分享/"},{"name":"学习教程","slug":"资源分享/学习教程","permalink":"http://HuiProgramer.github.io/categories/资源分享/学习教程/"}],"tags":[{"name":"学习资料","slug":"学习资料","permalink":"http://HuiProgramer.github.io/tags/学习资料/"},{"name":"学习视频","slug":"学习视频","permalink":"http://HuiProgramer.github.io/tags/学习视频/"}],"keywords":[{"name":"资源分享","slug":"资源分享","permalink":"http://HuiProgramer.github.io/categories/资源分享/"},{"name":"学习教程","slug":"资源分享/学习教程","permalink":"http://HuiProgramer.github.io/categories/资源分享/学习教程/"}]},{"title":"Java学习路线图","slug":"Java学习路线图","date":"2019-01-06T08:33:58.000Z","updated":"2019-01-09T13:43:12.380Z","comments":true,"path":"Java学习路线图.html","link":"","permalink":"http://HuiProgramer.github.io/Java学习路线图.html","excerpt":"","text":"JavaJava是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程 。 Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、动态性等特点 。Java可以编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等 。 Java学习路线图 如何学习JavaJava基础Java 是一门纯粹的面向对象的编程语言，所以除了基础语法之外，必须得弄懂它的 oop 特性：封装、继承、多态。此外还有泛型、反射的特性，很多框架的技术都依赖它，比如 Spring 核心的 Ioc 和 AOP，都用到了反射，而且 Java 自身的动态代理也是利用反射实现的。此外还有 Java 一些标准库也是非常常见，比如集合、I/O、并发，几乎在 Web 开发中无处不在，也是面试经常会被问到的，所以在自学 Java 后端之前，不妨先打好这些基础，另外还有 Java8 的一些新特性，也要重点关注，比如 Lambda 表达式、集合的 Stream 流操作、全新的 Date API 等等 数据库SQL建议学习MySQL在你了解了一些基础语法之后，就可以开始实战演练了，多练习熟练了就可以了。 JDBC你需要弄懂 JDBC API 的用法，其实它只是一组规范接口，所有数据库驱动只要实现了 JDBC，那么我们就可以通过标准的 API 调用相应的驱动，完全不用知道驱动是怎么实现的，这就是面向接口编程的好处。 Web基础Http 协议可以参考：Http协议 JSP你只要了解它其实就是一个 Servlet 就行了，关于它的一些标签用法，我认为可以直接忽略，因为现在互联网几乎没哪间公司还用 JSP，除了一些老旧的项目。现在都是流行前后端分离，单页应用，后端只做 API 接口的时代了，所以时间宝贵，把这些时间重点放在 Servlet 规范上面吧。 Tomcat它是一个 Web 容器，我们写的后端项目都要部署到Web容器才能运行，它其实是一个遵循 Http，通过 Socket 通信与客户端进行交互的服务端程序.可以参考：Tomcat结构及处理请求过程 Web 主流框架Java Web 框架多如牛毛，等你有一定经验了，你也可以写一个 Web 框架，网上很多说 Spring、Struts2、Hibernate 是 Java 三架马车，我只想说，那是很久远的事情了，我严重不推荐 Struts2、Hibernate，相信我，一开始只需要上手 Spring、SpringMVC、Mybatis 就可以了，特别是 Spring 框架，其实 Spring 家族的框架都是很不错的。 但是提醒一点就是，千万不要沉迷于各种框架不能自拔，以会多种用法而沾沾自喜，导致知其然而不知其所以然。 Spring核心思想就是 IOC 和 AOP： 谈谈对 Spring IOC 的理解 Spring 面向切面编程 SpringMVC它的思想是全部请求统一用一个 Servlet 去做请求转发与控制，这个 Servlet 叫 DispatcherServlet： SpringMVC 初始化过程 SpringMVC 处理请求过程 Mybatis它可实现动态拼装 sql，避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集： mybatis 入门教程 Mybatis 深入浅出系列 Web 框架进阶使用了 SSM 框架后，你会觉得框架也不过这么回事，如果你对 Spring 有过大概了解，你也会产生想写一个「山寨版」Spring 的心思了，一个轻量级 Web 框架主要具备以下功能： 可读取用户自定义配置文件，并以此来初始化框架； 具备 Bean 容器，管理项目的类的对象生命周期； 具备依赖注入，降低类之间的耦合性； 具备 AOP 功能，使项目可进行横向编程，可不改变原有代码的情况增加业务逻辑； 具备 MVC 框架模式。 其实除了 SSM 之外，Web 框架可谓是百家齐放，其中以 Spring 全家桶最为耀眼，在这里我极力推荐两个 Spring 家族框架：SpringBoot 和 SpringCloud。 SpringBoot弥补了 Spring 配置上的缺点，再也不用为繁杂的 xml 费劲精力了，堪称是 Java 后端开发的颠覆者，推荐书籍「Java EE 开发的颠覆者：SpringBoot实战」 SpringBoot 构建 web 项目 SpringBoot 自动化配置源码分析 自定义 SpringBoot Starter spring-boot-starter-tutorial SpringCloud一个微服务架构，能够将项目按照业务分成一个个微服务，每个微服务都可独立部署，服务之间互相协调。当一个项目越来越大时，随之而来的是越来越难以维护，此时将项目拆分成若干个微服务、单独维护、单独部署，也可以降低项目不同业务间的耦合度。推荐书籍「Spring Cloud 与 Docker 微服务架构实战」，这本书将 Docker 与微服务完美地结合在一起，堪称完美！ Spring Cloud 中文官网史上最简单的 Spring Cloud 教程 关于 Spring Cloud 的博客有： SpringCloud微服务架构之服务注册与发现SpringCloud微服务架构之服务消费者SpringCloud微服务架构之断路器SpringCloud微服务架构之服务网关 其它技术Redis一个高性能的 key-value 数据库，当有并发量很高的请求时，将数据缓存在 Redis 中，将提高服务器的响应性能，大大减轻数据库的压力。 redis 中文官网redis 教程 Git世界上最先进的分布式版本控制系统，建议所有初学者从命令行开始使用 Git！ Git 官网Git 教程 Maven一个用于构建项目的工具，将项目间的依赖通过 xml 完美地组织到一起，可通过编译插件将项目编译成字节码文件。还有类似的 Gradle 也是不错的选择。 maven 的 pom.xml 文件详解Linux：至少要求常用的命令会用，能够在 linux 环境下部署项目。Linux 命令大全最全的 SSH 连接远程终端教程 Docker简直是项目部署神器啊，来不及解释了，看下面一些 Docker 系列博客，开启 Docker 之旅吧！推荐书籍「Docker 技术入门与实战」，中国首部 Docker 著作！ Docker 实战（一）Docker 实战（二）Docker 实战（三）docker-deploy-tutorial","categories":[{"name":"后端","slug":"后端","permalink":"http://HuiProgramer.github.io/categories/后端/"},{"name":"Java","slug":"后端/Java","permalink":"http://HuiProgramer.github.io/categories/后端/Java/"}],"tags":[{"name":"Java学习路线","slug":"Java学习路线","permalink":"http://HuiProgramer.github.io/tags/Java学习路线/"}],"keywords":[{"name":"后端","slug":"后端","permalink":"http://HuiProgramer.github.io/categories/后端/"},{"name":"Java","slug":"后端/Java","permalink":"http://HuiProgramer.github.io/categories/后端/Java/"}]},{"title":"Git教程（持续更新）","slug":"Git教程","date":"2018-12-24T14:06:36.000Z","updated":"2019-01-06T08:21:50.967Z","comments":true,"path":"Git教程.html","link":"","permalink":"http://HuiProgramer.github.io/Git教程.html","excerpt":"","text":"GIT （分布式版本控制系统）简介Git(读音为/gɪt/。)是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。 什么是Git，Git可以用来干嘛？GIt是什么？Git是目前世界上最先进的分布式版本控制系统 Git可以用来干嘛？如果你用Microsoft Word写过长篇大论，那你一定有这样的经历： 想删除一个段落，又怕将来想恢复找不回来怎么办？有办法，先把当前文件“另存为……”一个新的Word文件，再接着改，改到一定程度，再“另存为……”一个新文件，这样一直改下去，最后你的Word文档就“魂飞魄散”了！ 过了一周，你想找回被删除的文字，但是已经记不清删除前保存在哪个文件里了，只好一个一个文件去找，真麻烦。 看着一堆乱七八糟的文件，想保留最新的一个，然后把其他的删掉，又怕哪天会用上，还不敢删，真郁闷。 更要命的是，有些部分需要你的财务同事帮助填写，于是你把文件Copy到U盘里给她（也可能通过Email发送一份给她），然后，你继续修改Word文件。一天后，同事再把Word文件传给你，此时，你必须想想，发给她之后到你收到她的文件期间，你作了哪些改动，得把你的改动和她的部分合并，真困难。 于是你想，如果有一个软件，不但能自动帮我记录每次文件的改动，还可以让同事协作编辑，这样就不用自己管理一堆类似的文件了，也不需要把文件传来传去。如果想查看某次改动，只需要在软件里瞄一眼就可以，岂不是很方便？ 这个软件用起来就应该像这个样子，能记录每次文件的改动： 版本 用户 说明 日期 1 张三 删除了软件服务条款5 7/12 10:38 2 张三 增加了License人数限制 7/12 18:09 3 李四 财务部门调整了合同金额 7/13 9:51 4 张三 延长了免费升级周期 7/14 15:17 Git与SVN的区别GIT不仅仅是个版本控制系统，它也是个内容管理系统(CMS),工作管理系统等。如果你是一个具有使用SVN背景的人，你需要做一定的思想转换，来适应GIT提供的一些概念和特征。Git 与 SVN 区别点： GIT是分布式的，SVN不是：这是GIT和其它非分布式的版本控制系统，例如SVN，CVS等，最核心的区别。 GIT把内容按元数据方式存储，而SVN是按文件：所有的资源控制系统都是把文件的元信息隐藏在一个类似.svn,.cvs等的文件夹里。 GIT分支和SVN的分支不同：分支在SVN中一点不特别，就是版本库中的另外的一个目录。 GIT没有一个全局的版本号，而SVN有：目前为止这是跟SVN相比GIT缺少的最大的一个特征。 GIT的内容完整性要优于SVN：GIT的内容存储使用的是SHA-1哈希算法。这能确保代码内容的完整性，确保在遇到磁盘故障和网络问题时降低对版本库的破坏。 安装Git最早Git是在Linux上开发的，很长一段时间内，Git也只能在Linux和Unix系统上跑。不过，慢慢地有人把它移植到了Windows上。现在，Git可以在Linux、Unix、Mac和Windows这几大平台上正常运行了。Git 各平台安装包下载地址为：http://git-scm.com/downloads 在Linux平台安装GitGit 的工作需要调用 curl，zlib，openssl，expat，libiconv 等库的代码，所以需要先安装这些依赖工具。在有 yum 的系统上（比如 Fedora）或者有 apt-get 的系统上（比如 Debian 体系），可以用下面的命令安装：各 Linux 系统可以使用其安装包管理工具（apt-get、yum 等）进行安装： Debian/UbuntuDebian/Ubuntu Git 安装命令为：1234567$ apt-get install libcurl4-gnutls-dev libexpat1-dev gettext \\ libz-dev libssl-dev$ apt-get install git$ git --versiongit version 1.8.1.2 Centos/RedHat如果你使用的系统是 Centos/RedHat 安装命令为：1234567$ yum install curl-devel expat-devel gettext-devel \\ openssl-devel zlib-devel$ yum -y install git-core$ git --versiongit version 1.7.1 在Mac OS X上安装Git如果你正在使用Mac做开发，有两种安装Git的方法。 一是安装homebrew，然后通过homebrew安装Git，具体方法请参考homebrew的文档：http://brew.sh/ 。 第二种方法更简单，也是推荐的方法，就是直接从AppStore安装Xcode，Xcode集成了Git，不过默认没有安装，你需要运行Xcode，选择菜单“Xcode”-&gt;“Preferences”，在弹出窗口中找到“Downloads”，选择“Command Line Tools”，点“Install”就可以完成安装了。 在Windows上安装Git在Windows上使用Git，可以从Git官网直接下载安装程序，（网速慢的同学请移步国内镜像），然后按默认选项安装即可。 安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！ Git配置Git 提供了一个叫做 git config 的工具，专门用来配置或读取相应的工作环境变量。这些环境变量，决定了 Git 在各个环节的具体工作方式和行为。这些变量可以存放在以下三个不同的地方： /etc/gitconfig 文件：系统中对所有用户都普遍适用的配置。若使用 git config 时用 –system 选项，读写的就是这个文件。 ~/.gitconfig 文件：用户目录下的配置文件只适用于该用户。若使用 git config 时用 –global 选项，读写的就是这个文件。 当前项目的 Git 目录中的配置文件（也就是工作目录中的 .git/config 文件）：这里的配置仅仅针对当前项目有效。每一个级别的配置都会覆盖上层的相同配置，所以 .git/config 里的配置会覆盖 /etc/gitconfig 中的同名变量。 在 Windows 系统上，Git 会找寻用户主目录下的 .gitconfig 文件。主目录即 $HOME 变量指定的目录，一般都是 C:\\Documents and Settings\\$USER。此外，Git 还会尝试找寻 /etc/gitconfig 文件，只不过看当初 Git 装在什么目录，就以此作为根目录来定位。 用户信息配置个人的用户名称和电子邮件地址：12$ git config --global user.name \"Your Name\"$ git config --global user.email \"email@example.com\" 因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。 如果用了 –global 选项，那么更改的配置文件就是位于你用户主目录下的那个，以后你所有的项目都会默认使用这里配置的用户信息。如果要在某个特定的项目中使用其他名字或者电邮，只要去掉 –global 选项重新配置即可，新的设定保存在当前项目的 .git/config 文件里。 注意: 用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。 查看配置信息要检查已有的配置信息，可以使用 git config –list 命令：1234$ git config --listcredential.helper=manageruser.name=ProgramerHuiuser.email=1712817197@qq.com Git工作流程 一般工作流程如下： 克隆 Git 资源作为工作目录。 在克隆的资源上添加或修改文件。 如果其他人修改了，你可以更新资源。 在提交前查看修改。 提交修改。 在修改完成后，如果发现错误，可以撤回提交并再次修改并提交。 Git工作区、暂存区和版本库基本概念 工作区：就是你在电脑里能看到的目录。 暂存区：英文叫stage, 或index。一般存放在 “.git目录下” 下的index文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。 版本库：工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。 下面这个图展示了工作区、版本库中的暂存区和版本库之间的关系：图中左侧为工作区，右侧为版本库。在版本库中标记为 “index” 的区域是暂存区（stage, index），标记为 “master” 的是 master 分支所代表的目录树。图中我们可以看出此时 “HEAD” 实际是指向 master 分支的一个”游标”。所以图示的命令中出现 HEAD 的地方可以用 master 来替换。图中的 objects 标识的区域为 Git 的对象库，实际位于 “.git/objects” 目录下，里面包含了创建的各种对象及内容。当对工作区修改（或新增）的文件执行 “git add” 命令时，暂存区的目录树被更新，同时工作区修改（或新增）的文件内容被写入到对象库中的一个新的对象中，而该对象的ID被记录在暂存区的文件索引中。当执行提交操作（git commit）时，暂存区的目录树写到版本库（对象库）中，master 分支会做相应的更新。即 master 指向的目录树就是提交时暂存区的目录树。当执行 “git reset HEAD” 命令时，暂存区的目录树会被重写，被 master 分支指向的目录树所替换，但是工作区不受影响。当执行 “git rm –cached “ 命令时，会直接从暂存区删除文件，工作区则不做出改变。当执行 “git checkout .” 或者 “git checkout – “ 命令时，会用暂存区全部或指定的文件替换工作区的文件。这个操作很危险，会清除工作区中未添加到暂存区的改动。当执行 “git checkout HEAD .” 或者 “git checkout HEAD “ 命令时，会用 HEAD 指向的 master 分支中的全部或者部分文件替换暂存区和以及工作区中的文件。这个命令也是极具危险性的，因为不但会清除工作区中未提交的改动，也会清除暂存区中未提交的改动。 Git创建版本库(仓库)什么是版本库呢？版本库又名仓库，英文名repository，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。 所以，创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录：12345$ pwd/c/Users/Administrator$ cd E:$ mkdir Git$ cd Git pwd命令用于显示当前目录，cd命令用于切换目录，mkdir用于创建文件夹，在我的Windows上，这个仓库位于E:/Git. 注意：文件夹应避免使用中文，防止乱码。 让文件夹成为真正的仓库上面步骤只是创建了一个文件夹，严格意义上并不算是一个Git版本库，so，现在，我们让这个文件夹变成一个真正的仓库。 输入git init命令把这个目录变成Git可管理的仓库12$ git initInitialized empty Git repository in E:/Git/.git/ 瞬间Git就把仓库建好了，而且告诉你是一个空的仓库（empty Git repository），细心的读者可以发现当前目录下多了一个.git的目录，这个目录是Git来跟踪管理版本库的，没事千万不要手动修改这个目录里面的文件，不然改乱了，就把Git仓库给破坏了。 如果你没有看到.git目录，那是因为这个目录默认是隐藏的，用ls -ah命令就可以看见。 把文件添加到版本库首先这里再明确一下，所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。版本控制系统可以告诉你每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。 不幸的是，Microsoft的Word格式是二进制格式，因此，版本控制系统是没法跟踪Word文件的改动的，前面我们举的例子只是为了演示，如果要真正使用版本控制系统，就要以纯文本方式编写文件。建议：编辑文本最好使用Notepad++代替记事本，因为微软自带记事本会在每个文件开头添加0xefbbbf（十六进制）的字符。 现在，我们编写一个readme.txt文件，内容如下:1Hello,Git! 注意:文件应该放在Git文件夹里，因为这是一个Git仓库，放到其他地方Git会找不到这个文件。 Git add通过git add告诉Git，把文件添加到仓库（暂存区）：1$ git add readme.txt 执行上面的命令，没有任何显示,代表执行成功。 Git commit通过git commit告诉Git，把文件提交到仓库（版本库）：1234$ git commit -m \"wrote a readme file\"[master (root-commit) eacdf4e] wrote a readme file 1 file changed, 2 insertions(+) create mode 100644 readme.txt 其中：git commit -m &quot;wrote a readme file&quot;中的-m &quot;xxx&quot;代表本次提交的说明。例如：$ git commit -m &quot;本次提交解决了若干个BUG&quot; 当然,提交说明也可以带表情，具体表情参考Github表情提交指南。 Git 基本操作获取和创建项目命令git init此命令在创建版本库的时候就讲过，git init命令就是将一个文件夹初始化为一个Git仓库，创建成功后在该文件夹下会生成一个.git的文件夹.例如：12$ git initInitialized empty Git repository in E:/Git/.git/ 现在你能看见该仓库中的.git文件了。12$ ls -a. .. .git 注意：这里的ls -a中的ls就是列表，清单的意思，在终端就是显示当前目录的所有文件，而-a的意思是显示隐藏文件。 git clone使用 git clone 拷贝一个 Git 仓库到本地，让自己能够查看该项目，或者进行修改。1$ git clone [url] url是你想克隆（复制）的网上仓库。例如：我们克隆Github上的项目1234567$ git clone git@github.com:HuiProgramer/HTML5_Learning.gitCloning into 'HTML5_Learning'...remote: Counting objects: 26, done.remote: Total 26 (delta 0), reused 0 (delta 0), pack-reused 26Receiving objects: 100% (26/26), done.Resolving deltas: 100% (5/5), done.Checking connectivity... done. 克隆完成后，在当前目录下会生成一个 HTML5_Learning 目录：1234$ cd HTML5_Learning&amp; lsCSS/ index.html logo.png Screen1.pngimg/ JavaScript/ README.MD Screen2.png 至此，一个Github上的项目就克隆完成了，你可以尝试修改或者查看。 常用命令git add此命令前面就讲过了，这里再举一个例子，这次我们往暂存区添加多个文件：123456789101112131415161718$ touch hello.py hello.c hello.java hello.html$ lshello.py hello.c hello.java hello.html$ git add hello.c hello.java hello.html hello.py$ git statusOn branch masterNo commits yetChanges to be committed: (use \"git rm --cached &lt;file&gt;...\" to unstage) new file: hello.c new file: hello.html new file: hello.java new file: hello.py 我们分别向暂存区提交了多个语言hello world程序源文件，touch代表我们新建这几个文件，git status的意思是查看当前暂存区的状态。扩展： 通过git add .可以将该文件夹的东西都添加到暂存区。 git statusgit status用于查看在你上次提交之后是否有修改，便于查看当前暂存区的状态，通过增加-s参数可以获得简短的输出结果，如果没有加该参数将会得到详细的输出。例如：123456789101112131415161718$ git statusOn branch masterNo commits yetChanges to be committed: (use \"git rm --cached &lt;file&gt;...\" to unstage) new file: hello.c new file: hello.html new file: hello.java new file: hello.py$ git status -sA hello.cA hello.htmlA hello.javaA hello.py 补充说明：A的意思是文件添加到了暂存区，而AM的意思是文件添加到暂存区后在工作区又有所改动。 git diff执行 git diff 来查看执行 git status 的结果的详细信息。git diff 命令显示已写入缓存与已修改但尚未写入缓存的改动的区别。git diff 有如下几个主要的应用场景。 尚未缓存的改动（工作区）：git diff 查看已缓存的改动（暂存区）： git diff –cached 查看已缓存的与未缓存的所有改动（工作区与暂存区）：git diff HEAD 显示摘要而非整个 diff：git diff –stat 例如我们利用notepad++编辑器修改hello.c文件内容如下：12345#include&lt;stdio.h&gt;int main(void)&#123; printf(\"hello,world\"); return 0;&#125; 现在我们使用git diff file命令来看看结果：123456789101112$ git diff hello.cdiff --git a/hello.c b/hello.cindex e69de29..fb0c3bd 100644--- a/hello.c+++ b/hello.c@@ -0,0 +1,5 @@+#include&lt;stdio.h&gt;+int main(void)&#123;+ printf(\"hello,world\");+ return 0;+&#125;\\ No newline at end of file 果然，git将整个文件的变化都列了出来。扩展：diff就是单词different的缩写，其原意是“区别，不同”。 git commit此命令在讲述创建版本库的时候就介绍过，主要用于将暂存区的东西提交到版本库中。例如：12345678910111213$ git status -sAM hello.cA hello.htmlA hello.javaA hello.py$ git commit -m\"第一次提交\"[master (root-commit) ac81931] 第一次提交 4 files changed, 0 insertions(+), 0 deletions(-) create mode 100644 hello.c create mode 100644 hello.html create mode 100644 hello.java create mode 100644 hello.py 我们将暂存区的内容提交到版本库后再次执行git status命令123456789$ git statusOn branch masterChanges not staged for commit: (use \"git add &lt;file&gt;...\" to update what will be committed) (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory) modified: hello.cno changes added to commit (use \"git add\" and/or \"git commit -a\") 此时，我们发现，暂存区的内容已经全部提交到版本库中，只有一条工作区内容被修改的记录。 git reset HEADgit reset HEAD file 命令用于取消已缓存(暂存区)的内容。可以理解为：撤销暂存区的修改。可单个撤销，也可以全部撤销。这里，我们先提交hello.c源文件123456789101112131415161718$ git statusOn branch masterChanges not staged for commit: (use \"git add &lt;file&gt;...\" to update what will be committed) (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory) modified: hello.cno changes added to commit (use \"git add\" and/or \"git commit -a\")$ git add hello.c$ git statusOn branch masterChanges to be committed: (use \"git reset HEAD &lt;file&gt;...\" to unstage) modified: hello.c 好的，现在hello.c源文件已经进入了暂存区了，那么，如果我不想提交该内容，该怎么解决呢？其实，通过git reset HEAD命令是可以丢弃掉暂存区里的内容的。现在，我们来试试吧！12345678910111213$ git reset HEADUnstaged changes after reset:M hello.c$ git statusOn branch masterChanges not staged for commit: (use \"git add &lt;file&gt;...\" to update what will be committed) (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory) modified: hello.cno changes added to commit (use \"git add\" and/or \"git commit -a\") 果然，暂存区的内容被撤销掉了。要点：git reset HEAD filename实现单个或多个文件在暂存区中撤销，git reset HEAD实现整个暂存区的撤销。注意：如果你提交暂存区后，在工作区又进行了修改，git reset HEAD命令并不会让你在工作区的内容回退到上一次提交的数据，该只是单纯的丢弃掉暂存区里的内容。 git checkout – filegit checkout --file命令用于取消未缓存的内容（工作区）。可以理解为：丢弃工作区的修改，回到上次修改的样子。那么，我们现在来试试1234567891011121314151617181920$ git statusOn branch masterChanges not staged for commit: (use \"git add &lt;file&gt;...\" to update what will be committed) (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory) modified: hello.cno changes added to commit (use \"git add\" and/or \"git commit -a\")$ cat hello.c#include&lt;stdio.h&gt;int main(void)&#123; printf(\"hello,world\"); return 0;&#125;$ git checkout -- hello.c$ cat hello.c 在这里，我们使用git status命令可以看到该文件只是在工作区进行了修改，接着我们使用了cat命令查看了文件内容，发现里面是C语言源代码，然后我们使用了git checkout -- hello.c命令丢弃了本次修改。等我们再次使用cat命令查看hello.c内容时发现里面已经没有内容了，这是为什么呢？原来这里的git checkout -- &lt;file&gt;命令的结果分为了两种情况: 当文件在工作区修改后还没有被添加到暂存区，此时使用该命令，会使工作区回到和版本库一模一样的状态。 当文件在工作区修改后被添加到了暂存区，此时使用该命令，会使工作区回到把文件添加到暂存区后的状态 那么，这里就是第一种状态了，因为我们并没有提交到暂存区，而版本库的hello.c里面恰恰是没有内容的。（因为当时并没有写内容） git rm如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 Changes not staged for commit 的提示。要从 Git 中移除某个文件，就必须要从已跟踪文件清单中移除，然后提交。可以用以下命令完成此项工作1$ rm &lt;file&gt; 如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f1$ rm -f &lt;file&gt; 如果把文件从暂存区域移除，但仍然希望保留在当前工作目录中，换句话说，仅是从跟踪清单中删除，使用 –cached 选项即可1$ git rm --cached &lt;file&gt; 我们先在hello.py增加如下代码1print(\"hello\") 然后，我们将文件添加到暂存区后，在暂存区中删除hello.py文件12345678910111213141516171819202122$ git add hello.py$ git statusOn branch masterChanges to be committed: (use \"git reset HEAD &lt;file&gt;...\" to unstage) modified: hello.py$ git rm --cached hello.pyrm 'hello.py'$ git statusOn branch masterChanges to be committed: (use \"git reset HEAD &lt;file&gt;...\" to unstage) deleted: hello.pyUntracked files: (use \"git add &lt;file&gt;...\" to include in what will be committed) hello.py 可以看到，我们在暂存区移除了该文件，现在，我们将工作区的文件也移除掉。1234$ rm hello.pyrm 'hello.py'$ lshello.c hello.html hello.java 至此，基本命令到此结束。 Git查看提交历史git log在使用 Git 提交了若干更新之后，又或者克隆了某个项目，想回顾下提交历史，我们可以使用 git log 命令查看。123456$ git logcommit ac81931794f4e232398796f5d4e09be155fc5bc2 (master)Author: ProgramerHui &lt;1712817197@qq.com&gt;Date: Fri Dec 28 19:17:51 2018 +0800 第一次提交 git log –onelinegit log --oneline 命令用来查看历史记录的简洁的版本。12$ git log --onelineac81931 (master) 第一次提交 git log –graphgit log --graph 命令，用于查看历史中什么时候出现了分支、合并。以下为相同的命令，开启了拓扑图选项：123456$ git log --graph* commit ac81931794f4e232398796f5d4e09be155fc5bc2 (master) Author: ProgramerHui &lt;1712817197@qq.com&gt; Date: Fri Dec 28 19:17:51 2018 +0800 第一次提交 git log –authorgit log --author命令用于查看指定用户的提交日志。示例如下：123456$ git log --author=ProgramerHuicommit ac81931794f4e232398796f5d4e09be155fc5bc2 (master)Author: ProgramerHui &lt;1712817197@qq.com&gt;Date: Fri Dec 28 19:17:51 2018 +0800 第一次提交 Git版本回退早在前面就说过Git能干什么的特性.你可以理解为Git就是一个时空穿梭机，能够回退版本和前进版本。 现在，我们来修改一下readme.txt的内容。1234567$ cat readme.txthello,Git$ echo \"HuiProgramer is handsome!\" &gt;&gt; readme.txt$ cat readme.txtHuiProgramer is handsome! 扩展：echo &quot; &quot; &gt;&gt; file是一个批处理命令，用于清空文件内容后，将” “里的内容写入到文件中。我们尝试提交一下123456$ git add readme.txt$ git commit -m\"handsome\"[master dd18d87] handsome 1 file changed, 1 insertion(+) create mode 100644 readme.txt 我们现在来回忆一下我们一共提交了哪几个版本的readme.txt文件。版本一： hello,Git 版本二： HuiProgramer is handsome 记不住也没事，我们可以通过git log命令来查看：123456789101112$ git logcommit dd18d87073e5d9a593dbfe3a89072e9f785431ad (HEAD -&gt; master)Author: ProgramerHui &lt;1712817197@qq.com&gt;Date: Sun Jan 6 12:07:01 2019 +0800 handsomecommit ac81931794f4e232398796f5d4e09be155fc5bc2Author: ProgramerHui &lt;1712817197@qq.com&gt;Date: Fri Dec 28 19:17:51 2018 +0800 wrote a readme file 可以看到第一次提交就是开始介绍GIt仓库时写的readme.txt,里面的内容是hello,Git.而最近一次提交就是我们重新修改了readme.txt后提交的，里面的内容是HuiProgramer is handsome(表脸). 那么，如果我想要回到上一个版本该怎么办呢？其实很简单只需要执行git reset --hard HEAD^就行了，其中^代表上一个版本，^^代表上上个版本，以此类推。12$ git reset --hard HEAD^HEAD is now at ac81931 wrote a readme file Look，我们已经回到了上一个版本了，现在我们打开readme.txt文件看看。 hello,Git 哇，果然是这样，但我又如何回去呢？就像我们现在坐着时空穿梭机回到了过去，应该怎么回到现在呢？其实很简单，我们可以通过上次执行git log命令拿到的commit后面的版本号再次穿梭就可以回来了。12$ git reset --hard dd18HEAD is now at dd18d87 handsome 注意：版本号没必要写全，前几位就可以了，Git会自动去找。当然也不能只写前一两位，因为Git可能会找到多个版本号，就无法确定是哪一个了。再次查看readme.txt的内容 HuiProgramer is handsome 嗯，不错，内容全回来了，还是一如既往的表脸。 扩展：假如我关闭了git bash这个终端，然后又回退了版本，输入git log又不显示，该怎么办呢？其实很简单，你只要输入git reflog命令就能再次看到你的提交记录了。1234567891011121314151617181920$ git reflogdd18d87 (HEAD -&gt; master) HEAD@&#123;0&#125;: reset: moving to dd18ac81931 HEAD@&#123;1&#125;: reset: moving to HEAD^dd18d87 (HEAD -&gt; master) HEAD@&#123;2&#125;: commit: handsomeac81931 HEAD@&#123;3&#125;: checkout: moving from Python to masteraf26cd8 (Python) HEAD@&#123;4&#125;: checkout: moving from master to Pythonac81931 HEAD@&#123;5&#125;: checkout: moving from Python to masteraf26cd8 (Python) HEAD@&#123;6&#125;: commit: test branchac81931 HEAD@&#123;7&#125;: checkout: moving from master to Pythonac81931 HEAD@&#123;8&#125;: checkout: moving from Python to masterac81931 HEAD@&#123;9&#125;: checkout: moving from master to Pythonac81931 HEAD@&#123;10&#125;: checkout: moving from Python to masterac81931 HEAD@&#123;11&#125;: checkout: moving from master to Pythonac81931 HEAD@&#123;12&#125;: checkout: moving from Python to masterac81931 HEAD@&#123;13&#125;: checkout: moving from master to Pythonac81931 HEAD@&#123;14&#125;: reset: moving to HEADac81931 HEAD@&#123;15&#125;: reset: moving to HEADac81931 HEAD@&#123;16&#125;: reset: moving to HEAD^5a56f73 HEAD@&#123;17&#125;: commit: hello worldac81931 HEAD@&#123;18&#125;: commit (initial): wrote a readme file Git与Github什么是GithubGitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。简单来说就是一个网上的仓库，而Git就是本地的仓库。 拥有自己的Github注册Github账号点击这里进行注册。注册完成后，登录… 创建自己的项目（仓库/版本库）点击+号进行创建填写项目名字，点击完成即可。完成后，会得到项目的提交地址。 创建SSH Key打开Git Bash终端，输入：1$ ssh-keygen -t rsa -C \"youremail@example.com\" 你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。 如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。 绑定SSH Key进入Github,点击头像，点击Settings。点击SSH and GPG Keys点击New SSH key可以看到此页面Title可以随便取一个，Key可以去C:\\Users\\Administrator\\.ssh下找到一个id_rsa.pub的文件，双击打开后复制里面的全部内容粘贴到Key下的框框里，然后点击Add SSH Key. 创建完成后就能看到这样的页面… 提交项目到Githubgit remote通过git remote add origin git@github.com:YourName/RepositoryName.git即可建立一个与当前分支关联的提交名字。1$ git remote add Golang git@github.com:HuiProgramer/Golang_Learning.git 解析：YourName为你的Github账户名,RepositoryName为你创建的项目名。注意：这里的origin可以任你更改，前提你得记住，后面提交要用到。 git push通过git push -u origin master命令可将本地项目推送到Github的仓库中。12345678910$ git push -u Golang masterCounting objects: 9, done.Delta compression using up to 2 threads.Compressing objects: 100% (6/6), done.Writing objects: 100% (9/9), 916 bytes | 152.00 KiB/s, done.Total 9 (delta 1), reused 0 (delta 0)remote: Resolving deltas: 100% (1/1), done.To github.com:HuiProgramer/Golang_Learning.git * [new branch] master -&gt; masterBranch 'master' set up to track remote branch 'master' from 'Golang'. Look,我们已经成功提交本地版本库到网上仓库了。 由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。 现在，我们打开我们的远程仓库看看，是否提交成功。嗯，不错，成功了，以后就这样提交。 git pull通过git pull origin master可将网上仓库拉取到本地来完成同步。1234$ git pull Golang masterFrom github.com:HuiProgramer/Golang_Learning * branch master -&gt; FETCH_HEADAlready up to date. 现在就会看到，本地项目和网上仓库一模一样了。 Git分支管理几乎每一种版本控制系统都以某种形式支持分支。使用分支意味着你可以从开发主线上分离开来，然后在不影响主线的同时继续工作。有人把 Git 的分支模型称为”必杀技特性”，而正是因为它，将 Git 从版本控制系统家族里区分出来。 分支的创建和切换创建分支命令：1$ git branch (branchname) 切换分支命令：1git checkout (branchname) 例如：12345$ git branch Python$ git checkout PythonSwitched to branch 'Python'D hello.py 扩展：git checkout -b (branchname)命令可以创建并切换新分支，从而实现在该分支中的操作。","categories":[{"name":"前端","slug":"前端","permalink":"http://HuiProgramer.github.io/categories/前端/"},{"name":"版本控制系统","slug":"前端/版本控制系统","permalink":"http://HuiProgramer.github.io/categories/前端/版本控制系统/"}],"tags":[{"name":"Github","slug":"Github","permalink":"http://HuiProgramer.github.io/tags/Github/"},{"name":"Git","slug":"Git","permalink":"http://HuiProgramer.github.io/tags/Git/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"http://HuiProgramer.github.io/categories/前端/"},{"name":"版本控制系统","slug":"前端/版本控制系统","permalink":"http://HuiProgramer.github.io/categories/前端/版本控制系统/"}]},{"title":"Markdown基本语法","slug":"Markdown基本语法","date":"2018-12-22T13:59:58.000Z","updated":"2018-12-23T11:47:39.777Z","comments":true,"path":"Markdown基本语法.html","link":"","permalink":"http://HuiProgramer.github.io/Markdown基本语法.html","excerpt":"","text":"MarkdownMarkdown介绍Markdown是一种轻量级的标记语言，使用普通的文本编辑器，通过简单的标记语法，就可以实现漂亮的排版，被越来越多的写作爱好者、程序员所使用。Markdown自成格式，不依赖任何编辑器，且易于传播，其语法十分简单，通过几分钟的简单学习，就可以实现基本的排版，然后专注于码字。 用途Markdown的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客。世界上最流行的博客平台WordPress和大型CMS如Joomla、Drupal都能很好的支持Markdown。完全采用Markdown编辑器的博客平台有Ghost和Typecho。用于编写说明文档，并且以“README.MD”的文件名保存在软件的目录下面。除此之外，由于我们有了RStudio这样的神级编辑器，我们还可以快速将Markdown转化为演讲PPT、Word产品文档、LaTex论文甚至是用非常少量的代码完成最小可用原型。在数据科学领域，Markdown已经广泛使用，极大地推进了动态可重复性研究的历史进程。 常用语法常用语法表格 输出后的效果 Markdown 快捷键 加粗 **text** Ctrl+B 斜体 *text* Ctrl+I 链接 [title](http://) Ctrl+L 代码块 `code` Ctrl+k 图片 ![alt](http://) Ctrl+G 有序列表 1. item Ctrl+Shift+O 无序列表 * item Ctrl+U 块级引用 > quote Ctrl+Q 一级标题 # Heading Ctrl+1 二级标题 ## Heading Ctrl+2 标题在想要设置为标题的文字前面加#来表示一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。注意：每个#后面必须跟一个空格示例：123#### 这是四级标题##### 这是五级标题###### 这是六级标题 效果如下： 这是四级标题这是五级标题这是六级标题字体 加粗要加粗的字体左右分别用两个*号包起来 斜体要倾斜的文字左右分别用一个*号包起来 斜体加粗要倾斜和加粗的文字左右分别用三个*号包起来 删除线要加删除线的文字左右分别用两个~~号包起来 代码示例:1234**这是加粗的文字***这是倾斜的文字****这是斜体加粗的文字***~~这是加删除线的文字~~ 有序无序列表 有序列表通过数字1234567…后面加一个.和空格实现。 无序列表通过*,-,+其中之一加一个空格来实现无序列表。 代码示例：1234567891011121. 我是有序列表* 我是由*号生成无序列表* 我是由*号生成无序列表* 我是由*号生成无序列表2. 我是有序列表- 我是由-号生成无序列表- 我是由-号生成无序列表- 我是由-号生成无序列表3. 我是有序列表+ 我是由+号生成无序列表+ 我是由+号生成无序列表+ 我是由+号生成无序列表 效果如下： 我是有序列表 我是由*号生成无序列表 我是由*号生成无序列表 我是由*号生成无序列表 我是有序列表 我是由-号生成无序列表 我是由-号生成无序列表 我是由-号生成无序列表 我是有序列表 我是由+号生成无序列表 我是由+号生成无序列表 我是由+号生成无序列表 块级引用在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;n个…示例：123&gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;这是引用的内容 效果如下： 这是引用的内容 这是引用的内容 这是引用的内容 代码块单行代码块通过`code`来展示单行代码块内容示例： `I’m single code.` 效果如下：I&#39;m single code. 多行代码块通过```code```来展示多行代码块内容示例： ```Python(指定语言)def example():&emsp;&emsp;for i in range(10):&emsp;&emsp;&emsp;&emsp;print(“hello”)``` 效果如下：123def example(): for i in range(10): print(\"hello\") 图片语法：![图片alt](图片地址 ‘’图片title’’) 图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加示例：1![头像](https://huiprogramer.github.io/images/avatar.jpg \"头像icon\") 效果如下： 链接语法：[超链接名](超链接地址 “超链接title”)title可加可不加示例：12[baidu](http://baidu.com)[博客](https://huiprogramer.github.io) 效果如下：baidu博客 表格语法：123456:---:|:---:|文字居中显示:---|:---文字靠左显示---:|---:文字靠右显示 示例：123456789101112131415161718示例1：表格文字居中|表格文字居中|表格文字居中:---:|:---:|:---:文字居中|文字居中|文字居中文字居中|文字居中|文字居中示例2：表格文字靠左|表格文字靠左|表格文字靠左:---|:---|:---文字靠左|文字靠左|文字靠左文字靠左|文字靠左|文字靠左示例3：表格文字靠右|表格文字靠右|表格文字靠右---:|---:|---:文字靠右|文字靠右|文字靠右文字靠右|文字靠右|文字靠右 示例1： 表格文字居中 表格文字居中 表格文字居中 文字居中 文字居中 文字居中 文字居中 文字居中 文字居中 示例2： 表格文字靠左 表格文字靠左 表格文字靠左 文字靠左 文字靠左 文字靠左 文字靠左 文字靠左 文字靠左 示例3： 表格文字靠右 表格文字靠右 表格文字靠右 文字靠右 文字靠右 文字靠右 文字靠右 文字靠右 文字靠右","categories":[{"name":"前端","slug":"前端","permalink":"http://HuiProgramer.github.io/categories/前端/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://HuiProgramer.github.io/tags/Markdown/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"http://HuiProgramer.github.io/categories/前端/"}]},{"title":"长难句分析（特殊结构的长难句）","slug":"长难句分析（特殊结构的长难句）","date":"2018-12-16T13:31:10.000Z","updated":"2018-12-16T13:35:51.196Z","comments":true,"path":"长难句分析（特殊结构的长难句）.html","link":"","permalink":"http://HuiProgramer.github.io/长难句分析（特殊结构的长难句）.html","excerpt":"","text":"二、特殊结构的长难句 分裂结构 嵌套结构 平行结构 特殊结构的长难句：分裂结构There is growing fear among vice-chancellors that this revenue——as well as the cultural, academic and economic benefit international students bring——is being put at risk.(CET-4, 201312 仔细阅读2)There is growing fear among vice-chancellors that this revenue is being put at risk.(CET-4, 201312 仔细阅读2) 特殊结构的长难句：嵌套结构Among the government’s most interesting reports is one that estimates what parents spend on their children.(CET-6, 201312 仔细阅读 1)A survey of 439 medical technicians found that 55 percent of technicians who monitor bypass machines acknowledged that they had talked on cellphones during heart surgery.(CET-4,201406 仔细阅读 1) A sunrvey … found &emsp;&emsp;&emsp;&emsp;宾语从句 &emsp;&emsp;&emsp;&emsp; &emsp;&emsp;&emsp;&emsp; &emsp;&emsp;定语从句&emsp;&emsp;&emsp;&emsp; &emsp;&emsp;&emsp;&emsp; &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;定语从句 that 55 percent of technicianswho monitor bypass machinesacknowledgedthat they had.. 特殊结构的长难句：平行结构The English, the Germans, the Dutch and the French were investing in Britain’s former colony.The English,the Germans,the Dutchand the Frenchwere investing in Britain’s former colony.Both areas are critical to producing citizens who can participate effectively in our democratic society, become innovative leaders, and benefit from the spiritual enrichment that teh reflection on the great ideas of mankind over time provides.(CET-4, 201406 仔细阅读 1)Several hours after a meal, people’s hunger levels were predicted not by how much they’d eaten but rather by how much food they’d seen in front of them…(CET-4, 201312 仔细阅读 1)But brains are the superior choice when you want information to change, in interesting and useful ways: to connect up with other facts and ideas, to acquire successive layers of meaning, to steep for a while in your accumulated knowledge and experience…(CET-6, 201406 仔细阅读 1) 长难句综合运用indeed, according to surveys, employers have expressed a preference for students who have received a broadly-based education that has taught them to write well, think critically, research creatively and communicate easily.(CET-4, 201406 仔细阅读 1)Cole and Fredrickson found that people who are happy but have little to no sense of meaning in their lives have the same gene expression patterns as people who are responding to and enduring chronic adversity.(CET-6, 201412 长篇阅读)","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"长难句分析（基本结构的长难句）","slug":"长难句分析（基本结构的长难句）","date":"2018-12-15T12:58:51.000Z","updated":"2018-12-15T13:03:30.115Z","comments":true,"path":"长难句分析（基本结构的长难句）.html","link":"","permalink":"http://HuiProgramer.github.io/长难句分析（基本结构的长难句）.html","excerpt":"","text":"一、基本结构的长难句 断开 简化 基本结构的长难句 &emsp;长难句&emsp;多个句子/多件事&emsp;简单句&emsp;一个句子/一件&emsp;简单句的核心&nbsp;一件事的核心内容断开1 标点&emsp;2 连接词&emsp;&emsp;3 分析主谓简化1 定位谓语动词2 去修饰找核心基本结构的长难句：1. 断开（1）标点（2）连接词：从句开始于连接词，结束于？（3）分析主谓&emsp;1) 标点&emsp;2) 下一个连接词前&emsp;3) 第二个谓语动词前连接词断开，结束于标点But this is a real-life argument before a Superme Court that has a well-earned reputation for looking out for the interests of large corporations.(CET-6,201312 仔细阅读 2)If it has to hire a caregiver for every two children,it can’t really achieve any economics of scale on labor to save money when other expenses go up.(CET-4,201412 仔细阅读 1)More than half of all recent graduates are unemployed or in jobs that do not require a degree, and the amount of student-loan debt carried by households has increased more than five times since 1999.(CET-4,201312 长篇阅读)Imagine the number of teaching jobs that might be eliminated if this could be done for math,economics,chemistry,and so on.(CET-6,201406 长篇阅读)Although it has been nearly 30 years since the first commercial mobile-phone network was launched, advertisers have yet to figure out how to get their messages out to mobile-phone users in a big way.(CET-4,201312 选词填空)连接词断开，结束于第二个谓语动词前Those who stay on for an additional two years can earn a master’s degree that qualifies them as nurse practitioners or clinical nurse spercialists.(CET-4,201312 选词填空)People who score on personality tests as more sympathetic cry more than those who are more rigid or have more self-control.(CET-4,201406 长篇阅读)Though the United States has fewer women in the workforce, American women who choose to be employed are far more likely to work full-time and to hold high-level jobs as managers or professionals.(CET-6,201406 长篇阅读)断开：分析主谓This is the best movie I have seen.The present he gave me was very amazing.Some scientists maintain that the changes we are seeing fall within the range of random variation…(CET-4,201406 选词填空)Some scientists maintain thatthe changes we are seeing fall within the range of random variation…(CET-4,201406 选词填空)When these students encounter a new problem of the same type on a test, they’re able to transfer the knowledge they’ve gathered more effectively than those who were the passive recipients of someone else’s expertise.(CET-6,201312 仔细阅读 1) 二、简化：去修饰，留核心修饰成分有：形容词、副词介词短语非谓语动词(doing/done/to do)冠词、数词非限定性定语从句Over the past few months it has been working hard, with the help of media consultants, to play down its cosy reputation in favour of something more academic and serious(CET-6,201412 仔细阅读 2)Printing with moveable type on paper dramatically reduced the cost of producing a book compared with the old-fashioned ones handwritten on vellum, which comes from sheepskin.(CET-4,201406 长篇阅读)A generation ago, female faces were rare and, even today, visitors walking through the first floor of LeConte Hall will see a full corridor of exhibits honoring the many distinguished physicists who made history here,virtually all of them white males.(CET-4,201312 选词填空) 基本结构的长难句：断开 + 简化The same dramatic technological changes that have provided marketers with more communications choices have also increased the risk that passionate consumers will voice their opinions in quicker, more visible, and much more damaging ways.The same dramatic technological changes 1 have also increased the risk 2. that have provided marketers with more communications choices. that passionate consumers will voice their opinions in quicker, more visible, and much more damaging ways.","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"特殊用途的句子(虚拟句)","slug":"特殊用途的句子-虚拟句","date":"2018-12-14T14:44:35.000Z","updated":"2018-12-15T13:00:47.598Z","comments":true,"path":"特殊用途的句子-虚拟句.html","link":"","permalink":"http://HuiProgramer.github.io/特殊用途的句子-虚拟句.html","excerpt":"","text":"第三章 虚拟1. 什么是虚拟？2. 怎么表示虚拟？3. 虚拟常用于？1. If 虚拟条件句（虚拟语气）&emsp;（1）虚拟条件句（假设现在） &emsp; If 从句 主句 假设过去 &emsp; would 假设现在 did(were) could/should&emsp;&emsp; + do 假设将来 &emsp; might If I were you, I would do it now. 练习：I am not you, so I can’t make the decision.I don’t know his phone number, so I won’t ring him up.He isn’t free at the moment, so he won’t go to the cinema. 补充：If I could rearrange the alphabet, I would put U and I together. &emsp;（2）虚拟条件句（假设过去） &emsp; If 从句 主句 假设过去 had done would + have done 假设现在 &emsp; could/should 假设将来 &emsp; might If they had won the match, they would have held a party to celebrate. 练习：He was not a student, so he couldn’t attend the lecture.He didn’t tell her the answer. She didn’t understand it.You were late, so you didn’t hear what he told us. &emsp; （3）虚拟语气（假设将来） &emsp; If 从句 主句 假设过去 &emsp; would 假设现在 &emsp; could/should 假设将来 did(were)were to doshould do might + do If I were to live my life over again, I would have you as my life. 练习：如果我明天有时间，我就会帮他。（明天不太可能有时间）If I had time tomorrow（were to have/should have）,I would help him. 总结： &emsp; If 从句 主句 假设过去 had done would + have done 假设现在 did(were) could/should + do 假设将来 did(were)were to doshould do might + do If 非真实条件句（混合时态的虚拟） &emsp; If 从句 主句 假设过去 &emsp; &emsp; 假设现在 &emsp; &emsp; 假设将来 &emsp; &emsp; 如果你（过去）嫁给他，你（现在）就会是一个加油站服务员的妻子。If you had married him, you would be the wife of a gas station attendant. 省略 If 的虚拟条件句If you had joined us, we would have had more fun.If I were you, I would think it twice. 2. 名词性从句的虚拟语气：表示“建议，要求，命令”动词后的宾语从句虚拟从句中用（should）+ doHe suggested that the system should be changed.suggest, advise, propose, recommend, order, ask, demand, insist, require, request…… 练习：宾语从句的虚拟语气 The engineers proposed they (look) at the design again. He insisted that she (send) her sister to a dancing school. The workers demanded they (give) the wages they should get. He ordered they (start) the attack before dawn. The teacher always suggests the students (go) over the text before the best. the professor recommended we (look) for the information in the library. 总结：表示 “建议，要求，命令” 的名词性从句He suggested that the system should be changed.His suggestion was that the system should be changed.He gave the suggestion that the system should be changed.This year,it was suggested that the system should be changed.","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"特殊用途的句子(倒装句)","slug":"特殊用途的句子-倒装句","date":"2018-12-13T14:15:08.000Z","updated":"2018-12-13T14:17:58.610Z","comments":true,"path":"特殊用途的句子-倒装句.html","link":"","permalink":"http://HuiProgramer.github.io/特殊用途的句子-倒装句.html","excerpt":"","text":"第二章 倒装全部倒装/部分倒装1. 全部倒装：In the mountain lies a castle.Here comes the bus.全部倒装：There be 句型1. There be + n. “有”（客观存在）There is a girl.2. There be + n + 介词短语 “有…在哪里”（客观存在）There is a book on the table.There is no gap between mind and matter.注意：1）be 动词的变化&emsp;&emsp;&emsp;&emsp;&nbsp; There will now be a seven-day wait for jobseeker’s allowance.&emsp;&emsp;&emsp;2）主语的单复数&emsp;&emsp;&emsp;3）There 还可以与情态动词搭配&emsp;&emsp;&emsp;&emsp;&nbsp; There may be more matches in the database.2. 部分倒装：相当于把陈述句变成疑问句三种情况需要倒装（1）否定词位于句首&emsp;not, no, never, hardly, little, scarcely, seldom, not until, not only……（2）only 位于句首（3）虚拟if条件句举例：The poor man had not only been arrested but he had been sent to prison as well.Not only had the poor man been arrested, but he had been sent to prison as well.We can learn English well only in this way.Only in this way can we learn English well.练习：1. You will never know the truth.Never .2. He cares little for my words.Little .3. I had no sooner got the invitation than I refused.No sooner .4. He had hardly had time to settle down when he left the country.Hardly .5. He achieved his goal only by working hard.Only by working hard .6. Natural disasters will reduce, only when we solve the problems of environmental pollution.Only when .","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"特殊用途的句子(强调句)","slug":"特殊用途的句子-强调句","date":"2018-12-12T09:37:35.000Z","updated":"2018-12-12T09:51:39.056Z","comments":true,"path":"特殊用途的句子-强调句.html","link":"","permalink":"http://HuiProgramer.github.io/特殊用途的句子-强调句.html","excerpt":"","text":"第一章 强调强调句It is ….. that …..I want to go to America this summer.It is America that I want to go to this summer.补充：强调过去时态：It was …. that …强调人时：It is …. that/who …练习：It is they. not American, who have become anti-intellectual.It is they who have become anti-intellectual.It is … that …写作：Lisa likes cooking at home.We used to have meetings in the cafe.They celebrated the holiday on Nov.11th.Students don’t like too much homework.Men can solve the problems of natural disaster only by controlling the environmental pollution.注意：一个句子的动词和形容词不能强调。","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"简单句的补充(复合句/状语从句)","slug":"简单句的补充-复合句-状语从句","date":"2018-12-10T14:10:39.000Z","updated":"2018-12-16T13:41:29.656Z","comments":true,"path":"简单句的补充-复合句-状语从句.html","link":"","permalink":"http://HuiProgramer.github.io/简单句的补充-复合句-状语从句.html","excerpt":"","text":"第三章 状语从句1.状语从句的含义：一个句子作状语，表达描述性的信息。2.状语从句的写法：从属连词 + 完整的陈述句 &emsp; 从属连词 时间状语从句 when, while, as, before, after, since, until &emsp; as soon as, no sooner…than 地点状语从句 where 原因状语从句 because, since, as 结果状语从句 so/such…that, so that… 目的状语从句 so that…,in order that 条件状语从句 if, unless, as long as 让步状语从句 although, though, even though, as 比较状语从句 than, as 方式状语从句 as 地点状语从句Stay where you are.Where there is a will, there is a way. 结果状语从句The problem is so complicated that we cannot solve it.It is such a complicated problem that we cannot solve it. 让步状语从句Although it is summer, it is very cold.It is summer, but it is very cold. 比较状语从句I am as tall as you.I am as tall as you(are). 方式状语从句Do it as I told you yesterday.When in Rome, do as Romans do. 3.状语从句的时态：时间/条件状语从句中表示将来，要换成一般现在时。如果明天下雨，我们就不去公园。If it rains tomorrow, we will not go for a picnic.I will let him know, when he comes home later. 改错练习： The boss will review your work after she will return from vacation next week.(returns) I’ll give you a call on my cell phone as soon as my plane will land .(lands) I don’t like my current job, but I’m going to stay with this company until I will find something better.(find) If it won’t be cold tomorrow. we’ll go to the beach.(isn’t) If it will be cold tomorrow, we will go to a movie.(is) 4.状语从句的位置：If it rains tomorrow, we will not go to the park.We will not go to the park, If it rains tomorrow.We, If it rains tomorrow, will not go to the park. 练习： He speaks English well indeed, but of course not _ a native speaker.A. as fluent as &emsp;&emsp;&emsp;&emsp;B. more fluent thanC. as fluently as &nbsp;&emsp;&emsp;&emsp;D. much fluently than The couple had no sooner got to the station _ the coach left.A. when &emsp;&emsp;B. as &emsp;&emsp;C. until &emsp;&emsp;D. than My parents don’t mind what job I do _ I am happy.A. even though &emsp;B. as soon as &emsp;C. as long as &emsp;D. as though The medicine works more effectively _ you drink some hot water after taking it.A. as &emsp;&amp;emspB. until &emsp;&emsp;C. although &emsp;&emsp;D. if __ the police thought he was the most likely one, since they had no exact proof about it,they could not arrest him.A. Although &emsp;B. As long as &emsp;C. If only &emsp;D. As soon as It just isn’t fair. __ I was working as a waiter last month, my friends were lying on the beach.A. whenever &emsp;B. though &emsp;C. for &emsp;D. while Shall we have our picnic tomorrow?_ it doesn’t rain.A.Until &emsp;&emsp;B. While &emsp;&emsp;C. Once &emsp;&emsp;D. If The Great Wall is _ tourist attraction that millions of people pour in every year.A. so a well-known &emsp;&emsp;&emsp;B. a so well-knownC. such well-known a &emsp;&emsp;D. such a well-known Owen wouldn’t eat anything _ he cooked it himself.A. until &emsp;&emsp;B. since &emsp;&emsp;C. unless &emsp;&emsp;D. while答案1.C 2.D 3.C 4.D 5.A 6.D 7.D 8.D 9.C","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"简单句的补充(复合句/定语从句)","slug":"简单句的补充-复合句-定语从句","date":"2018-12-07T14:33:54.000Z","updated":"2018-12-10T08:25:02.792Z","comments":true,"path":"简单句的补充-复合句-定语从句.html","link":"","permalink":"http://HuiProgramer.github.io/简单句的补充-复合句-定语从句.html","excerpt":"","text":"第二章 定语从句1. 定语从句的含义：一个句子作定语，去修饰限定名词。2. 定语从句的写法：先把主句和从句写出两个句子，再把从句合并进去修饰限定名词。This is the 我梦想很多年的 job.This is the job. I have dream of the job for years.This is the job Which I have dreamed of for years.&emsp;&emsp;&emsp;&emsp;&emsp;↓&emsp;&emsp;&emsp;↓&emsp;&emsp;先行词 关系词&emsp;&emsp;关系词如何选择？&emsp;&emsp;&emsp;&emsp;看先行词！&emsp;先行词 = ？物人人的/物的时间地点原因 &emsp;关系词 = ？which/thatwho/whom/thatwhosewhenwherewhy练习关系词的选择：1. I have a class begins at 8:00 am.2. The lawyer my brother called didn’t answer the phone.3. My daughter asked me a question I couldn’t answer.4. The people sat in the stadium cheered for the home team.5. Leo is the student bike was stolen.6. Australia is one of the few countries people drive on the left.7. Sunday is the day people usually don’t go to work.8. Is there any particular reason you can’t come?答案1. which/that 2. 不填/whom/that 3. 不填/that/which 4. who 5. whose 6. where 7. when 8. why 练习写定语从句 1. I lost the book .&emsp;我弄丢了上周从图书馆借的书。2. The woman was feeding pigeons.&emsp;我在公园看见的那位女士正在喂鸽子。3. The bus is usually very crowed.&emsp;我每天上学坐的那辆公交车总是很拥挤。答案1. which/that/不填 I borrowed from the library 2. who/that/whom/不填 I saw in the park 3. which/that/不填 I take every day to school 3. 定语从句的分类： I met your friend who is staying in Paris.&emsp;&emsp;&emsp;&emsp;限定性定语从句I met your mother,who is staying in Paris.&emsp;&emsp;&emsp;&nbsp;非限定性定语从句This is the wall which they built last week.This is the Great Wall, which is world-famous.练习（填入逗号和关系词）:1. He came from Beijing is the capital of China.(,which)2. He came from a city is in the north of China.(which/that)3. This is the businessman we are cooperating with.(who/whom/that/不填)4. This is Bill Gates many people know as the richest amn.(,whom)注意：非限定性定语从句不仅可以修饰前面的名词，还可以修饰前面的整句话。The company will get back to you in three days,which is one of the typical rules.补充：介词提前的定语从句This is the job which/that/X I have dreamed of for years.This is the job of which I have dreamed of for years.Humans have the ability to modify the environment in which they live.The theory on which it is based may be right.","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"简单句的补充(复合句/名词性从句)","slug":"简单句的补充-复合句-名词性从句","date":"2018-12-06T14:15:41.000Z","updated":"2018-12-10T08:25:12.446Z","comments":true,"path":"简单句的补充-复合句-名词性从句.html","link":"","permalink":"http://HuiProgramer.github.io/简单句的补充-复合句-名词性从句.html","excerpt":"","text":"第一章 名词性从句一、宾语从句1. 宾语从句的含义：一个句子作宾语，放在另一个句子（主句）里。2. 宾语从句的写法：&emsp;① 陈述句变成宾语从句？You are right.&emsp;&emsp;&emsp;&emsp;↓&emsp;&emsp;&emsp;&emsp;&emsp;I know __.I know (that) you are right.&emsp;② 特殊疑问句变成宾语从句？What will she say?&emsp;&emsp;&emsp;&emsp;↓&emsp;&emsp;&emsp;I know _.I know what she will say.&emsp;③ 一般疑问句变成宾语从句？Is he happy?&emsp;&emsp;&emsp;&emsp;↓&emsp;&emsp;&emsp;&emsp;&emsp;I know __.I know whether/if he is happy.总结：宾语从句的写法____ + ___&emsp;&emsp;(词 + 陈述句)练习：填入宾语从句的连接词1. 我承诺我会帮助你。&emsp;I promise I will help you.2. 你从来没告诉过我，你对我电脑做了什么。&emsp;You never told me you had done to my computer.3. 我想知道什么时候我们将会出发。&emsp;I wonder we will set out.4. 他们不知道他们是否会按时完成工作。&emsp;They don’t know they will finish the work on time.5. 你能告诉我什么时候我们将会出发吗？&emsp; Can you tell me ?答案1. that 2. what 3. when 4. whether 5. when we’ll set out3.宾语从句的位置：名词性从句：6. we know *.7. The big news is *.8. * is big news.9. We know the big news *.宾语从句：1. I don’t know when you will finish the work.No one tells me when you will finish the work. 2. I worry about whether I hurt her feelings.3. Are you positive (that) you’ve never seen that man before.二、表语从句My concern is that people don’t care about others.The question remains whether people will buy it.三、同位语从句一个句子作同位语，解释说明 n.位置：需要解释的抽象 n.后。(fact, idea, news, dream, suggestion, advice, report …)最常用的是：“that+陈述句”这种 (注意： that不作成分，但不能省略)我不怀疑他将会帮我的忙。I have no doubt that he will help me.我支持这种论据, 校车问题必须被严肃对待。I support the argument that the problems of school buses must be taken seriously.四、主语从句我们是否将会去露营取决于天气。位置1：句首Whether we will go camping depends on the weather.位置2：句尾(句首用形式主语it)It depends on the weather whether we will go camping.注意：两种位置，意思相同。但更常用的是位于句尾的主语从句。练习： 填入连接词， 并判断是哪种名词性从句。1. ____ Barbara Jones offers to her fans is honesty and happiness. A. Which &emsp;&emsp;B. What &emsp;&emsp;C. That &emsp;&emsp;D. Whom 2. We’ve offered her the job, but I don’t know ___ she’ll accept it. A. where &emsp;&emsp;B. what &emsp;&emsp;C. whether &emsp;&emsp;D. which 3. Our teachers always tell us to believe in __ we do and who we are if we want to succeed. A. why &emsp;&emsp;B. how &emsp;&emsp;C. what &emsp;&emsp;D. which 4. Modern science has given clear evidence ___ smoking can lead to many diseases. A. what &emsp;&emsp;B. which &emsp;&emsp;C. that &emsp;&emsp;D. where 5. It was never clear ____ the man hadn’t reported the accident sooner. A. that &emsp;&emsp;B. how &emsp;&emsp;C. when &emsp;&emsp;D. why 6. It is still under discussion ___ the old bus station should be replaced with a modern hotel or not. A. whether &emsp;&emsp;B. when &emsp;&emsp;C. which &emsp;&emsp;D. where 7. I am afraid he’s more of a talker than a doer, which is ___ he never finishes anything. A. that &emsp;&emsp;B. when &emsp;&emsp;C. where &emsp;&emsp;D. why 8. These wild flowers are so special that I would do __ I can to save them. A. whatever &emsp;&emsp;B. which &emsp;&emsp;C. that &emsp;&emsp;D. whichever答案1. B 主语从句 &emsp; 2. C 宾语从句 &emsp; 3. C 宾语从句 &emsp; 4. C 同位语从句 5. D 主语从句 &emsp; 6. A 主语从句 &emsp; 7. D 表语从句 &emsp; 8. A 宾语从句","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"简单句的补充(并列句)","slug":"简单句的补充-并列句","date":"2018-12-05T13:53:28.000Z","updated":"2018-12-10T08:24:53.130Z","comments":true,"path":"简单句的补充-并列句.html","link":"","permalink":"http://HuiProgramer.github.io/简单句的补充-并列句.html","excerpt":"","text":"一、并列句的构成多件事（多个简单句）之间同等重要，用并列连词连接起来。四六级常用的并列连词有：1）&emsp;&emsp;&emsp;表示顺接：…and…;both…and…;not only…,but…as well/but also…2）&emsp;&emsp;&emsp;表示转折：but;yet;while3）&emsp;&emsp;&emsp;表示选择：…or…;either…or…;neither…nor…4）&emsp;&emsp;&emsp;表示因果：…for…（原因）;…so…（结果）二、并列句的省略I am a teacher and I like English.I am a teacher and like English.I am lying in bed and I am reading a book.I am lying in bed and reading a book.I want to leave and I want to go abroad.I want to leave and to go abroad.and(平行结构)练习1. You can stay at home go out to play. It doesn’t matter.A.either,or&emsp;&emsp;B.neither,nor&emsp;&emsp;C.both,and&emsp;&emsp;D.not only,but also2. We bought her a birthday present,_ she likes it very much.A.so&emsp;&emsp;&emsp;B.or&emsp;&emsp;&emsp;C.and&emsp;&emsp;&emsp;D.but3. _ you _ he is able to ski,but I am.A.both,and&emsp;&emsp;B.either,or&emsp;&emsp;C.neither,nor&emsp;&emsp;D.between,and4. The doctor tried their best to save the patient’s life,_failed.A.or&emsp;&emsp;B.so&emsp;&emsp;C.but&emsp;&emsp;D.because5. I could speak _ Japanese _ Chinese,so I had to talk with him in English.A.not only,but also&emsp;&emsp;B.both,and&emsp;&emsp;C.neither,norD.either,or6. I like pop music,but _ my father _ my mother likes it.A.both,and&emsp;&emsp;B.either,or&emsp;&emsp;C.neither,nor&emsp;&emsp;D.not only,but also7. Tom,keep away from the fire, you will get burnt.A.and&emsp;&emsp;B.so&emsp;&emsp;C.or&emsp;&emsp;D.but8. I thought we’d be late for the concert,__ we ended up getting there ahead of time.A.but&emsp;&emsp;B.or&emsp;&emsp;C.so&emsp;&emsp;D.for答案：第一题A第二题C第三题C第四题C第五题C第六题C第七题C第八题A","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"简单句的核心变化（同位语/插入语）","slug":"简单句的核心变化（同位语-插入语）","date":"2018-12-04T12:22:05.000Z","updated":"2018-12-10T08:25:50.234Z","comments":true,"path":"简单句的核心变化（同位语-插入语）.html","link":"","permalink":"http://HuiProgramer.github.io/简单句的核心变化（同位语-插入语）.html","excerpt":"","text":"三、同位语/插入语同位语，解释说明前面名词，与名词相同，说的是一件事。My teacher,Mr. Lee,is coming to the meeting.插入语，插入的补充说明，与前后无关。My teacher,together with his colleagues,is coming to the meeting.All their lives, today’s young women have been pushed to embrace both perfection and passion to pursue science and sports,math and theater and do it all as well as they possibly can.2014.06 CET4Confronted with such facts, some Swedish activists and legislators are demanding more extreme and far-reaching measures,such as replacing male and female pronouns with neutral alternative and monitoring children more closely to correct them when they gravitate toward gendered play.2014.06 CET6","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"简单句的补充（非谓语动词）","slug":"简单句的补充（非谓语动词）","date":"2018-12-03T13:58:09.000Z","updated":"2018-12-16T13:45:45.110Z","comments":true,"path":"简单句的补充（非谓语动词）.html","link":"","permalink":"http://HuiProgramer.github.io/简单句的补充（非谓语动词）.html","excerpt":"","text":"二、非谓语动词 非谓语动词 共3种 doing 表示主动 done 表示被动 to do 表示目的 Passing planes can be heard night and day. The teacher came into the classroom,holding a book in his hand. He bought a used car. The teacher came into the classroom, followed by five students. I have a lot of homework to do. I am coming to see you.练习： _, you need to give all you have and try your best. A. Being a winner &emsp;&emsp;&emsp;B. To be a winner C. Being a winner&emsp;&emsp;&emsp;D. Having been a winner _ into English, the sentence was found to have an entirely different word order. A. Translating&emsp;&emsp;&emsp;&nbsp;B. Translated C. To translate&emsp;&emsp;&emsp;D. Having translated Peter received a letter just now _his grandma would come to see him soon. A. said&emsp;&emsp;&emsp;&emsp;&nbsp;B. says C. saying&emsp;&emsp;&emsp;D. to say _ an important role in a new movie, Andy has a chance to become famous. A. Offer&emsp;&emsp;&emsp;&emsp;&nbsp;B. Offering C. Offered&emsp;&emsp;&emsp;D. To offer The island, __ to the mainland by a bridge,is easy to go to. A. joining&emsp;&emsp;&emsp;B. to join C. joined&emsp;&emsp;&emsp;D. having joined","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"简单句的补充(限定词/形容词/介词短语)","slug":"简单句的补充-限定词-形容词-介词短语","date":"2018-12-02T14:34:56.000Z","updated":"2018-12-10T08:25:23.493Z","comments":true,"path":"简单句的补充-限定词-形容词-介词短语.html","link":"","permalink":"http://HuiProgramer.github.io/简单句的补充-限定词-形容词-介词短语.html","excerpt":"","text":"一、限定词/形容词/介词短语Girls play games.Girls are playing games.Lovely girls are playing games happily.Thousands of Lovely girls are playing games very happily.After class thousands of Lovely girls are playing games very happily on the playground.常见介词prep. : in on at / from to / into onto / with without / of / by / for / about其他介词 : before after / since until / during / between among / across through / against / like as","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"简单句的核心变化（主语/宾语/表语的变化）","slug":"简单句的核心变化（主语-宾语-表语的变化）","date":"2018-12-01T14:44:37.000Z","updated":"2018-12-10T08:26:07.920Z","comments":true,"path":"简单句的核心变化（主语-宾语-表语的变化）.html","link":"","permalink":"http://HuiProgramer.github.io/简单句的核心变化（主语-宾语-表语的变化）.html","excerpt":"","text":"(二)主语/宾语/表语的变化1. 名词/代词Most graduates always want a big-firm job.She is the leader of the organization.They gave us a good impression.2. doing/to doLaughing probably has great influence on health.To laugh probably has great influence on health.It probably has great influence on health to laugh.Having only a foggy view of the future is of little good.It is no use to talk about dreams without trying.We enjoy reading books in the library.The members of the board decide to vote against the new plan.Our main goal is to finish the task on time.3. 多个并列Science and technology will develop the process of society.Social science disciplines include geography, economics, political science, and psychology.That doesn’t mean sitting down and doing nothing at all.&emsp;&emsp;n. + v.名词/代词&emsp;&emsp;&emsp;&emsp;&nbsp;&nbsp;&nbsp;动词的时态doing&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&nbsp;&nbsp;动词的语态to do&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&nbsp;&nbsp;动词的情态多个并列&emsp;&emsp;&emsp;&emsp;&nbsp;&nbsp;&nbsp;&nbsp;动词的否态","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"简单句的核心变化（情态）","slug":"简单句的核心变化（情态）","date":"2018-11-30T12:47:34.000Z","updated":"2018-12-15T14:07:19.892Z","comments":true,"path":"简单句的核心变化（情态）.html","link":"","permalink":"http://HuiProgramer.github.io/简单句的核心变化（情态）.html","excerpt":"","text":"3. 情态用法： 情态动词 + 动词原型 情态动词的人称变化无 情态动词的动态变化有限 情态动词变否定/疑问 四六级常用的情态动词有： &emsp;现在时&emsp; &emsp;过去时&emsp; must 无 can could will would shall should may might must “必须” &emsp;can/could“能够，可以”&emsp;will/would“愿意/将要”may/might“可以，可能”&emsp;should“应该” 1 情态动词表示情态 We must finish the work within a week. Air pollution must be taken seriously. The government can solve the problem of water pollution. Tony could walk when he was only one year old. Will you marry me? I will travel abroad with my family. Potential buyers would cheer for lower interest rates. To some extent.expressions may influence emotions. Such bodily reaction might help moderate the work stress. Students should work hard to pass the exams. Those sick people should seek help from doctors. 2 情态动词表示推测 The details may be unknowable. Such searches must take years. The loss of patience can potentially have a damaging impact on our professional and personal wellbeing. The way of saying those things may have led to misunderstanding. Now something similar could be happening in the South Africa. 练习： In order to be a good salesclerk, you (must not/will not) be rude to a customer. This pie is very good. You (should/must)try a piece. Rice (should/must/may) have water in order to grow. Don’t be nervous. I think you (can/must) make it. I am not sure. Probably he (may/should) come later. 第一题1.must not第二题2.should第三题3.must/should第四题4.can第五题5.may","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"简单句的核心变化（语态）","slug":"简单句的核心变化（语态）","date":"2018-11-29T14:28:19.000Z","updated":"2018-12-10T08:25:56.817Z","comments":true,"path":"简单句的核心变化（语态）.html","link":"","permalink":"http://HuiProgramer.github.io/简单句的核心变化（语态）.html","excerpt":"","text":"2.语态n. + v.动词的时态动词的语态动词的情态谓语动词的变化–&gt;语态被动语态 狗吃了那个蛋糕。The dog ate the cake.?吃了那个蛋糕。—-&gt;蛋糕被吃了。狗吃了那个蛋糕。主语&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;宾语蛋糕被狗吃了。被动适用范围 1：及物动词。 2：不及物动词+介词。被动语态 be + done备注：be表示被动的时间 (把be变成对应的各种形态), 还表达主语单复数。done 表示被动的动作教师每天都打扫。Classrooms are cleaned(clean) every day.一座新的大楼去年建造的。A new building was built(build) last year.与时态相结合被动语态&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;be + done他每天被打。&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;He is beaten every day.他昨天被打了。&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;He was beaten yesterday.他明天将要被打。&emsp;&emsp;&emsp;&emsp;&emsp;He will be beaten tomorrow.他现在正在被打。&emsp;&emsp;&emsp;&emsp;&emsp;He is being beaten.(现在进行时的被动am/is/are + being done)他现在已经被打了。&emsp;&emsp;&emsp;&emsp;He has been beaten.(现在完成时的被动have/has + been done)Our morning paper is read(read) by over 200,000 people every day.Last night my favorite TV program was interrupted(interrupt) by a special news bulletin.His bike will be repaired(repair) by his grandfather tomorrow.The new machine has been used(use) in our factory for two week.与情态动词想结合被动语态&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;be + donePlanes are heard.Planes can be heard.Planes could be heard.Planes may be heard.Planes must be heard.这封信必须马上寄出。The letter must be sent immediately.天气不能被人们所控制。Weather cannot be controlled by people.","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"简单句的核心变化（时态）","slug":"简单句的核心变化（时态）","date":"2018-11-27T02:22:00.000Z","updated":"2018-12-15T13:40:07.582Z","comments":true,"path":"简单句的核心变化（时态）.html","link":"","permalink":"http://HuiProgramer.github.io/简单句的核心变化（时态）.html","excerpt":"","text":"二、简单句的核心变化(一)谓语动词的变化&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n. + v. 动词的时态 动词的语态 动词的情态 动词的否定 1. 时态： 时态 过去 现在 将来 过去将来 一般 did/was/were do/does will/am/is/are going to + V.原型 would/were/was going to + V.原型 进行 be + doingbe + doing be + doing be + doing 完成 had + done have/has+done &emsp; &emsp; 完成进行 &emsp; have/has been + doing &emsp; &emsp; 一般过去时 Simple Past形式：V.过去式(did/was/were)用法：过去的事、过去的动作(无关现在)例子： He was a student. He liked music. She had a boyfriend. 变否定或者疑问 He was happy. He liked English. He was not happy. He did not like English. Was he happy? Did he like English? What was he? What did he like? 补充： &emsp; V.过去式 V.过去分词 look looked looked buy bought bought see saw seen eat ate eaten V.过去式&nbsp;&nbsp;&emsp;丨V.过去分词 一般过去时&nbsp;&nbsp;丨完成时&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;丨被动语态&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;丨不做谓语 一般现在时 Simple Present形式：V.原型/V.第三人称单数(do/does)You like English.He likes English. 用法： 1.现在经常性习惯性的动作We have the English class every day.He often gets up late. 2.现在的状态I am a teacher.We are in China. 3.永恒The earth is round.The earth moves around the sun.Knowledge is power.Practice makes perfect. 变否定或者疑问 He is happy. You like English. He likes English. He is not happy. You do not like English. He does not like English. Is he happy? Do you like English? Does he like English? How is he? What do you like? What does he like? 补充：与频率连用(every,once a week,twice a month,three times a …)alwaysusually,often,frequentlysometimes,occasionallyseldom,hardlynever 一般将来时 Simple Future形式：Will/am/is/are going to + V.原型用法：将来的事(现在的将来) I will make a new plan tomorrow. We are going to study abroad next year. 变否定或者疑问 He will leave. He is going to leave. He will not leave. He is not going to leave. Will he leave? Is he going to leave? What will he? What is he going to do? 过去将来时 Past Future形式：Would/was/were going to + V.原型用法：将来的事(过去的将来)I said that I would become a cook in the future.Tony finished his work,and then he would leave for London. 三种进行时 Progressive TenseAt 10 o’clock yesterday some students were taking an exam in their classrooms. We are taking about the water pollution. A great many candidates will be meeting here at this time tomorrow. 现在完成时 Present Perfect Tense形式：have/has + done用法：现在全部完成 He has left.现在部分完成 We have studied English for ten years. 过去完成时 Past Perfect Tense形式：had + done用法：过去的之前When he got there,she had left.She was not there. 完成进行时 = “完成” + “进行” =**时间的之前，强调进行的过程 角度相同 都表示 “现在的之前” 两种时态 现在完成时have/has + done 现在完成进行时have/has been + doing 强调不同 强调结果(做完与否都可以) 强调过程 例句 We have not won the match. We have been working hardfor several months. They on the program for almost one week before I joined them, and now we are still working on it as no good results so far. A.have been working;have come out B.had worked;came out C.had been working;have come out D.have worked;are coming out 显示答案答案：C","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]},{"title":"emoji指南","slug":"emoji指南","date":"2018-11-26T09:35:51.000Z","updated":"2018-12-10T08:24:34.118Z","comments":true,"path":"emoji指南.html","link":"","permalink":"http://HuiProgramer.github.io/emoji指南.html","excerpt":"","text":"Github提交表情指南emojiemoji 代码commit 说明:art: (调色板):art:改进代码结构/代码格式:zap: (闪电):racehorse: (赛马):zap:“:racehorse:提升性能:fire: (火焰):fire:移除代码或文件:bug: (bug):bug:修复 bug:ambulance: (急救车):ambulance:重要补丁:sparkles: (火花):sparkles:引入新功能:memo: (备忘录):memo:撰写文档:rocket: (火箭):rocket:部署功能:lipstick: (口红):lipstick:更新 UI 和样式文件:tada: (庆祝):tada:初次提交:white_check_mark: (白色复选框):white_check_mark:增加测试:lock: (锁):lock:修复安全问题:apple: (苹果):apple:修复 macOS 下的问题:penguin: (企鹅):penguin:修复 Linux 下的问题:checkered_flag: (旗帜):checked_flag:修复 Windows 下的问题:bookmark: (书签):bookmark:发行/版本标签:rotating_light: (警车灯):rotating_light:移除 linter 警告:construction: (施工):construction:工作进行中:green_heart: (绿心):green_heart:修复 CI 构建问题:arrow_down: (下降箭头):arrow_down:降级依赖:arrow_up: (上升箭头):arrow_up:升级依赖:construction_worker: (工人):construction_worker:添加 CI 构建系统:chart_with_upwards_trend: (上升趋势图):chart_with_upwards_trend:添加分析或跟踪代码:hammer: (锤子):hammer:重大重构:heavy_minus_sign: (减号):heavy_minus_sign:减少一个依赖:whale: (鲸鱼):whale:Docker 相关工作:heavy_plus_sign: (加号):heavy_plug_sign:增加一个依赖:wrench: (扳手):wrench:修改配置文件:globe_with_meridians: (地球):globe_with_meridians:国际化与本地化:pencil2: (铅笔):pencil2:修复 typo","categories":[{"name":"前端","slug":"前端","permalink":"http://HuiProgramer.github.io/categories/前端/"}],"tags":[{"name":"Github","slug":"Github","permalink":"http://HuiProgramer.github.io/tags/Github/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"http://HuiProgramer.github.io/categories/前端/"}]},{"title":"简单句","slug":"简单句","date":"2018-11-25T08:06:50.000Z","updated":"2018-12-24T15:09:59.379Z","comments":true,"path":"简单句.html","link":"","permalink":"http://HuiProgramer.github.io/简单句.html","excerpt":"","text":"第一章：简单句的核心一、简单句的核心构成简单句一个句子（一件事）世界是物质的，物质是运动的 n. + v.主语 + 谓语 n. + 谓语 v. 一主一谓，谓语动词的不同决定简单句的不同构成。 例子I swim.I like English 区分vt./vi.1)意思2)介词(prep.) I like English. The bride kissed the groom. Birds fly in the sky. We walked on the street yesterday. You look at me. 介宾结构 They offered me a vacant post. they offered a vacant post to me. I bought you a present. I bought a present for you. I find HongKong ???I find HongKong very beautiful.I find HongKong a place for shopping. 我非常高兴。I very happy. ???I am very happy. 主系表系动词 be动词 （单独） “变得” get become turn go grow 感官动词 look sound smell taste feel “看 / 听 / 闻 / 尝 / 感觉起来…..” keep remain/seem appear For example: I ask you a question. 主谓双宾 You answer. 主谓 I love you. 主谓宾 You make my life complete. 主谓宾补 I am happy. 主系表 主语 + 谓语 + ?","categories":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}],"tags":[{"name":"English-Syntax","slug":"English-Syntax","permalink":"http://HuiProgramer.github.io/tags/English-Syntax/"}],"keywords":[{"name":"英语","slug":"英语","permalink":"http://HuiProgramer.github.io/categories/英语/"}]}]}